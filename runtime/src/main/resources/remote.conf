akka {
  log-dead-letters = 10000

  extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  remote {
    netty {
      hostname = ""
      port = 0
    }
    enabled-transports = ["akka.remote.netty.tcp"]
  }

  actor {
    provider = remote

    allow-java-serialization = off

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.spbsu.flamestream.runtime.raw.RawData" = kryo
      "com.spbsu.flamestream.runtime.tick.TickInfo" = kryo
      "com.spbsu.flamestream.core.data.DataItem" = kryo
      "com.spbsu.flamestream.runtime.ack.Ack" = kryo
      "com.spbsu.flamestream.runtime.ack.AckerReport" = kryo
      "com.spbsu.flamestream.runtime.ack.RangeCommitDone" = kryo
      "com.spbsu.flamestream.runtime.ack.Commit" = kryo
      "com.spbsu.flamestream.runtime.range.HashRange" = kryo
      "com.spbsu.flamestream.runtime.range.AddressedItem" = kryo
      "com.spbsu.flamestream.runtime.ack.MinTimeUpdate" = kryo
    }

    kryo {
      type = "graph"
      idstrategy = "default"
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      use-unsafe = false
      post-serialization-transformations = "lz4"
      implicit-registration-logging = false
      kryo-trace = false
      resolve-subclasses = false
    }
  }
}
